[{"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\index.js":"1","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\App.js":"2","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\styles.js":"3","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\home.jsx":"4","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Home.jsx":"5","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Expense.jsx":"6","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events.jsx":"7","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\index.js":"8","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Details\\Details.jsx":"9","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\InfoCard.jsx":"10","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Snackbar\\Snackbar.jsx":"11","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Main.jsx":"12","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Snackbar\\styles.js":"13","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Details\\styles.js":"14","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\styles.js":"15","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\context\\context.js":"16","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\List\\List.jsx":"17","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Form\\Form.jsx":"18","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\context\\contextReducer.js":"19","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\List\\styles.js":"20","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Form\\styles.js":"21","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\constants\\categories.js":"22","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\utils\\formatDate.js":"23","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\useTransactions.js":"24","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EDetails\\EDetails.jsx":"25","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EDetails\\style.js":"26","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EMain.jsx":"27","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\styles.js":"28","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EForm\\EForm.jsx":"29","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EForm\\styles.js":"30","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EList\\EList.jsx":"31","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EList\\style.js":"32","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\Snackbar\\Snackbar.jsx":"33","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\Snackbar\\styles.js":"34","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EContext\\context.js":"35","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EContext\\contextReducer.js":"36","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\InfoCard.jsx":"37","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Events.jsx":"38","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EClist\\EClist.jsx":"39","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EClist\\style.js":"40"},{"size":507,"mtime":1618734661334,"results":"41","hashOfConfig":"42"},{"size":600,"mtime":1618728032258,"results":"43","hashOfConfig":"42"},{"size":733,"mtime":1618752885114,"results":"44","hashOfConfig":"42"},{"size":1982,"mtime":1618221143084,"results":"45","hashOfConfig":"42"},{"size":4127,"mtime":1618773260294,"results":"46","hashOfConfig":"42"},{"size":4211,"mtime":1618751486681,"results":"47","hashOfConfig":"42"},{"size":1395,"mtime":1618727597626,"results":"48","hashOfConfig":"42"},{"size":216,"mtime":1618231350871,"results":"49","hashOfConfig":"42"},{"size":738,"mtime":1618306698754,"results":"50","hashOfConfig":"42"},{"size":474,"mtime":1618724703357,"results":"51","hashOfConfig":"42"},{"size":797,"mtime":1618231351486,"results":"52","hashOfConfig":"42"},{"size":1329,"mtime":1618752131005,"results":"53","hashOfConfig":"42"},{"size":206,"mtime":1618231351554,"results":"54","hashOfConfig":"42"},{"size":206,"mtime":1618748551971,"results":"55","hashOfConfig":"42"},{"size":514,"mtime":1618231351112,"results":"56","hashOfConfig":"42"},{"size":2042,"mtime":1618718801804,"results":"57","hashOfConfig":"42"},{"size":1411,"mtime":1618306547459,"results":"58","hashOfConfig":"42"},{"size":5013,"mtime":1618305591533,"results":"59","hashOfConfig":"42"},{"size":583,"mtime":1618728918227,"results":"60","hashOfConfig":"42"},{"size":416,"mtime":1618231351399,"results":"61","hashOfConfig":"42"},{"size":247,"mtime":1618231351255,"results":"62","hashOfConfig":"42"},{"size":2851,"mtime":1618741300362,"results":"63","hashOfConfig":"42"},{"size":301,"mtime":1618231351846,"results":"64","hashOfConfig":"42"},{"size":1140,"mtime":1618305591533,"results":"65","hashOfConfig":"42"},{"size":535,"mtime":1618771337115,"results":"66","hashOfConfig":"42"},{"size":246,"mtime":1618752978414,"results":"67","hashOfConfig":"42"},{"size":1144,"mtime":1618753014535,"results":"68","hashOfConfig":"42"},{"size":512,"mtime":1618664719578,"results":"69","hashOfConfig":"42"},{"size":4719,"mtime":1618770024394,"results":"70","hashOfConfig":"42"},{"size":308,"mtime":1618721051269,"results":"71","hashOfConfig":"42"},{"size":1543,"mtime":1618769741978,"results":"72","hashOfConfig":"42"},{"size":528,"mtime":1618671345250,"results":"73","hashOfConfig":"42"},{"size":776,"mtime":1618687514300,"results":"74","hashOfConfig":"42"},{"size":206,"mtime":1618231351554,"results":"75","hashOfConfig":"42"},{"size":2205,"mtime":1618775531691,"results":"76","hashOfConfig":"42"},{"size":1652,"mtime":1618770966122,"results":"77","hashOfConfig":"42"},{"size":418,"mtime":1618723896430,"results":"78","hashOfConfig":"42"},{"size":4473,"mtime":1618771941294,"results":"79","hashOfConfig":"42"},{"size":1222,"mtime":1618771170461,"results":"80","hashOfConfig":"42"},{"size":528,"mtime":1618671345250,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"fqecqx",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":1,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"84"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\index.js",[],["173","174"],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\App.js",["175"],"import React, { Component } from 'react'\r\nimport { BrowserRouter as Router,Route,Link, Switch } from \"react-router-dom\";\r\nimport Home from './Home';\r\nimport Expense from './Expense';\r\nimport Events from './Events';\r\n\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ Home }></Route>\r\n          <Route exact path=\"/Expense\" component={ Expense }></Route>\r\n          <Route exact path=\"/Events\" component={ Events }></Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\home.jsx",["176","177","178","179","180","181","182","183"],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Home.jsx",["184","185","186"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from \"react-router-dom\";\r\nimport qqqqq from './assets/qqqqq.png'\r\nimport expmoney from './assets/expmoney.png';\r\nimport './index.css';\r\nimport Typewriter from 'typewriter-effect';\r\nimport logo from './assets/logo.png';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        // marginTop: '40px',\r\n\r\n    },\r\n    paper: {\r\n        height: 260,\r\n        width: 280,\r\n        backgroundColor: \"#999DA0\",\r\n        color: \"Black\",\r\n        marginTop: '100px',\r\n        marginBottom: '140px',\r\n        borderRadius: '50px',\r\n    },\r\n\r\n    control: {\r\n        padding: theme.spacing(2),\r\n    },\r\n\r\n    type:{\r\n        fontSize: 50,\r\n        marginTop: '120px',\r\n        marginLeft: '120px',\r\n    }\r\n\r\n}));\r\n\r\nconst Home = () => {\r\n\r\n    const [spacing, setSpacing] = React.useState(2);\r\n    const classes = useStyles();\r\n\r\n    const handleChange = (event) => {\r\n        setSpacing(Number(event.target.value));\r\n    };\r\n\r\n    return (\r\n        \r\n            <div class=\"home-back\">\r\n            {/* <div style={{  backgroundImage: `url(${ background })` , backgroundPosition: 'center',\r\n        backgroundSize: '100% 100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        marginTop: '0px',\r\n        height: '754px',\r\n        width: '1517px',\r\n         }}> */}\r\n        \r\n            {/* <Typewriter className={classes.type}\r\n                options={{\r\n                    strings: ['Hello', 'World'],\r\n                    autoStart: true,\r\n                    loop: true,\r\n                }}\r\n            /> */}\r\n           \r\n                <br></br><br></br>\r\n                <div align=\"center\" style={{ fontSize:'48px', }}><b><img src={logo} height='100px' width='100px' />Managify </b></div>\r\n                <br></br><br></br><br></br><br></br>\r\n            \r\n\r\n<div className=\"App\">\r\n      <Typewriter\r\n  \r\n       onInit={(typewriter)=> {\r\n  \r\n       typewriter\r\n        \r\n       .typeString(\"'The key is in not spending , but Managing it...'\")\r\n         \r\n       .pauseFor(1000)\r\n       .deleteAll()\r\n       .typeString(\"'The shorter way to do many things is to only do one thing at a time....'\")\r\n       .start();\r\n       }}\r\n       />\r\n    </div>\r\n\r\n            <Grid container className={classes.root} spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={8}>\r\n                        {[1].map((value) => (\r\n                            <Grid key={value} item>\r\n                                <Link to=\"/Expense\">\r\n                                    <Paper className={classes.paper}>\r\n                                        <img src={expmoney} alt=\"expense tracker\" height='150px' width='135px' style={{ marginLeft: '70px', marginTop: '7px', }} />\r\n\r\n                                        <Typography style={{ marginLeft: '50px', marginTop: '0px', }}><h2>PocketMoney & Expense Tracker </h2> </Typography>\r\n                                    </Paper>\r\n                                </Link>\r\n                            </Grid>\r\n                        ))}\r\n                        {[1].map((value) => (\r\n                            <Grid key={value} item>\r\n                                <Link to=\"/Events\">\r\n                                    <Paper className={classes.paper}>\r\n                                        <img src={qqqqq} alt=\"events tracker\" height='150px' width='135px' style={{ marginLeft: '70px', marginTop: '24px', }} />\r\n\r\n                                        <Typography style={{ marginLeft: '50px', marginTop: '0px', }}><h2>Events Tracker</h2> </Typography>\r\n                                    </Paper>\r\n                                </Link>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        \r\n         </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Expense.jsx",["187"],"import React, { useEffect, useRef } from 'react';\r\nimport { Grid, Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\n\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\n\r\nimport { Details, Main } from './components';\r\nimport List from './components/Main/List/List';\r\nimport useStyles from './styles';\r\nimport expvector from './assets/expvector.png';\r\n\r\nconst Expense = () => {\r\n  const classes = useStyles();\r\n  const { speechState } = useSpeechContext();\r\n  const main = useRef(null)\r\n\r\n  const executeScroll = () => main.current.scrollIntoView()    \r\n\r\n  useEffect(() => {\r\n    if (speechState === SpeechState.Recording) {\r\n      executeScroll();\r\n    }\r\n  }, [speechState]);\r\n\r\n  return (\r\n    <div class='exp-back' style={{ marginTop: '-60px', }}>\r\n      <Grid className={classes.grid} container spacing={0} alignItems=\"left\" justify=\"left\" style={{ height: '100vh', marginTop: '60px'}}>\r\n       \r\n        <Grid ref={main} item xs={12} sm={4} className={classes.main} style={{ marginLeft: '140px' }}>\r\n          <Main />\r\n        </Grid>\r\n        <Grid  item xs={12} sm={4} className={classes.main} style={{ marginLeft: '140px' }}>\r\n          <img src={expvector} style={{ marginLeft: '80px', marginTop: '170px', width: '590px' , height: '350px' }}/>\r\n        </Grid>\r\n        <PushToTalkButtonContainer>\r\n          <PushToTalkButton />\r\n        </PushToTalkButtonContainer>\r\n      </Grid>\r\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh',  marginTop: '-285px'}}>\r\n        <Grid item xs={12} sm={3} className={classes.mobile}>\r\n          <Details title=\"Pocket Money\" />\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.mobile}>\r\n          <Card className={classes.income}>\r\n            <CardHeader></CardHeader>\r\n            <CardContent>\r\n              <Typography variant=\"h5\">Pending Events</Typography>\r\n              <List/>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={3} className={classes.last}>\r\n          <Details title=\"Expense\" />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expense;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { Grid } from '@material-ui/core';\r\n\r\n// import { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\n// import { PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\n\r\n// import { Details , Main } from './components';\r\n// import useStyles from './styles';\r\n// import './index.css';\r\n\r\n// const Expense = () => {\r\n//   const classes = useStyles();\r\n//   const { speechState } = useSpeechContext();\r\n//   const main = useRef(null)\r\n\r\n//   const executeScroll = () => main.current.scrollIntoView()    \r\n\r\n//   useEffect(() => {\r\n//     if (speechState === SpeechState.Recording) {\r\n//       executeScroll();\r\n//     }\r\n//   }, [speechState]);\r\n\r\n//   return (\r\n//     <div class=\"exp-back\">\r\n//       {/* <div style={{  backgroundImage: `url(${ money })` , backgroundPosition: 'center',\r\n//         backgroundSize: '100% 90%',\r\n//         backgroundRepeat: 'no-repeat',\r\n//         marginTop: '-36px',\r\n//         height: '100%',\r\n//         width: '100%' }}></div> */}\r\n//       <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh'}}>\r\n//         <Grid item xs={12} sm={4} className={classes.mobile} >\r\n//           <Details title=\"Pocket Money\" />\r\n//         </Grid>\r\n//         <Grid ref={main} item xs={12} sm={3} className={classes.main}>\r\n//           <Main />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={4} className={classes.desktop}>\r\n//           <Details title=\"Pocket Money\" />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={4} className={classes.last}>\r\n//           <Details title=\"Expense\" />\r\n//         </Grid>\r\n//         <PushToTalkButtonContainer>\r\n//           <PushToTalkButton />\r\n//         </PushToTalkButtonContainer>\r\n//       </Grid>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Expense;\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\index.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Details\\Details.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\InfoCard.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Main.jsx",["188","189","190","191"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard';\r\n\r\nconst ExpenseTracker = () => {\r\n  const classes = useStyles();\r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root} style={{borderRadius:'10px', marginTop:'27px', }}>\r\n      <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ₹{balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider} />\r\n        <Form />\r\n      </CardContent>\r\n      <CardContent className={classes.cartContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            {/* <List /> */}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseTracker;","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Snackbar\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Details\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\context\\context.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\List\\List.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Form\\Form.jsx",["192"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { pocketmoneyCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Pocket Money',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (pocketmoneyCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Pocket Money' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_pocketmoney') {\r\n        setFormData({ ...formData, type: 'Pocket Money' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (pocketmoneyCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Pocket Money', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  const selectedCategories = formData.type === 'Pocket Money' ? pocketmoneyCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Pocket Money\">Pocket Money</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\context\\contextReducer.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\List\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\components\\Main\\Form\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\constants\\categories.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\utils\\formatDate.js",["193"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = d.getFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\useTransactions.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EDetails\\EDetails.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EDetails\\style.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EMain.jsx",["194","195"],"import React from 'react';\r\nimport {Card, CardHeader, CardContent, Typography, Grid ,Divider} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport EForm from './EForm/EForm';\r\nimport EList from './EList/EList';\r\nimport InfoCard from '../InfoCard'\r\n\r\nconst EMain = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.root} style={{ borderRadius: '10px', marginTop: '27px', height:'500px' }}>\r\n            <CardHeader title=\"Event Tracker\" subheader=\"Powered by Speechly\" align='center' />\r\n            <CardContent>\r\n                <Typography variant=\"subtitle1\" style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n                    <InfoCard />\r\n                </Typography>\r\n                <Divider />\r\n                <EForm/>\r\n            </CardContent>\r\n            {/* <CardContent className={ classes.cardContent }>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <EList />\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent> */}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default EMain\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EForm\\EForm.jsx",["196","197"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Subtitles } from '@material-ui/icons';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../EContext/context';\r\nimport { eventCategories, eventSubject } from '../../../../constants/categories';\r\n\r\nconst initialState = {\r\n    category: '',\r\n    subject: 'Dbms',\r\n    date: formatDate(new Date()),\r\n};\r\n\r\n\r\nconst EForm = () => {\r\n\r\n    const classes = useStyles();\r\n    const { addTransaction } = useContext(ExpenseTrackerContext);\r\n    const [formData, setFormData] = useState(initialState);\r\n    const { segment } = useSpeechContext();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const createEvent = () => {\r\n        if (!formData.date.includes('-')) return;\r\n\r\n        // if (eventCategories.map((iC) => iC.type).includes(formData.category)) {\r\n        //   setFormData({ ...formData, category: 'Exam' });\r\n        // } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n        //   setFormData({ ...formData, type: 'Expense' });\r\n        // }\r\n\r\n        setOpen(true);\r\n        addTransaction({ ...formData, id: uuidv4() });\r\n        setFormData(initialState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n          if (segment.intent.intent === 'add_assignment') {\r\n            setFormData({ ...formData, category: 'Assignment' });\r\n          } else if (segment.intent.intent === 'add_exam') {\r\n            setFormData({ ...formData, category: 'Exam' });\r\n          }else if (segment.intent.intent === 'add_pro') {\r\n            setFormData({ ...formData, category: 'Project Submission' });\r\n          }\r\n        if (segment.isFinal && segment.intent.intent === 'create_event') {\r\n            return createEvent();\r\n        } else if (segment.isFinal && segment.intent.intent === 'cancel_event') {\r\n            return setFormData(initialState);\r\n        }\r\n\r\n        segment.entities.forEach((s) => {\r\n            const subject = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n           \r\n\r\n            switch (s.type) {\r\n                case 'subject':\r\n                    // program in meet chat\r\n                    setFormData({ ...formData, subject});\r\n                    break;\r\n                case 'date':\r\n                    setFormData({ ...formData, date: s.value });\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        if (segment.isFinal && formData.category && formData.subject && formData.date) {\r\n            createEvent();\r\n        }\r\n    }\r\n     \r\n      }, [segment]);\r\n\r\nconst selectedCategories = eventCategories;\r\nconst selectedSubjects = eventSubject;\r\n\r\nreturn (\r\n    <Grid container spacing={1}>\r\n        <Snackbar open={open} setOpen={setOpen} />\r\n        <Grid item xs={12} align=\"center\">\r\n            <Typography align=\"center\" variant='subtitle2' gutterBottom>\r\n            {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n               </Typography>\r\n        </Grid>\r\n        <Grid item xs={7} justify='center'>\r\n            <FormControl fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        <Grid item xs={7} align=\"center\">\r\n            <FormControl fullWidth>\r\n                <InputLabel>Subject</InputLabel>\r\n                <Select value={formData.subject} onChange={(e) => setFormData({ ...formData, subject: e.target.value })}>\r\n            {selectedSubjects.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n            </FormControl>\r\n        </Grid>\r\n        <Grid item xs={7}>\r\n            <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n            \r\n      </Grid>\r\n        <Button className={classes.button} variant='outlined' color=\"primary\" fullWidth onClick={createEvent}>Add Event</Button>\r\n    </Grid>\r\n    \r\n);\r\n};\r\n\r\nexport default EForm;\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EForm\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EList\\EList.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EList\\style.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\Snackbar\\Snackbar.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\Snackbar\\styles.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EContext\\context.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EContext\\contextReducer.js",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\InfoCard.jsx",[],"C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\Events.jsx",["198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useRef } from 'react';\r\nimport { Grid, Card, CardHeader, CardContent, Typography } from '@material-ui/core';\r\nimport EDetails from './events/EComponents/EDetails/EDetails';\r\nimport EMain from './events/EComponents/EMain/EMain';\r\nimport './index.css';\r\nimport useStyles from './styles';\r\nimport EList from './events/EComponents/EMain/EList/EList';\r\nimport { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\nimport { ErrorPanel, PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\nimport EClist from './events/EComponents/EMain/EClist/EClist';\r\n\r\n\r\n\r\nconst Events = () => {\r\n    const classes = useStyles();\r\n    const { speechState } = useSpeechContext();\r\n    const main = useRef(null)\r\n\r\n    // const executeScroll = () => main.current.scrollIntoView()    \r\n\r\n    // useEffect(() => {\r\n    //   if (speechState === SpeechState.Recording) {\r\n    //     executeScroll();\r\n    //   }\r\n    // }, [speechState]);\r\n\r\n    return (\r\n        <div class=\"events-back\" style={{ marginTop: '-60px', }}>\r\n            <Grid className={classes.grid} container spacing={0} container spacing={0} alignItems=\"left\" justify=\"left\" style={{ height: '100vh', marginTop: '60px' }}>\r\n                <Grid item xs={12} sm={5} className={classes.main} style={{ marginLeft: '140px' }}>\r\n                    <EMain />\r\n                </Grid>\r\n                <Grid item xs={12} sm={4} className={classes.mobile} style={{ height: '50vh', marginTop: '100px', marginLeft:'80px', }}>\r\n                    <Card className={classes.income}>\r\n                        <CardHeader></CardHeader>\r\n                        <CardContent >\r\n                            {/* <Typography variant=\"h5\">Pending Events</Typography> */}\r\n                            <h1 className={classes.center}>Pending Events</h1>  \r\n                            <EList />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={3} >\r\n                    <EDetails title=\"completed\" />\r\n                </Grid> */}\r\n                <PushToTalkButtonContainer>\r\n                    <PushToTalkButton />\r\n                    <ErrorPanel />\r\n                </PushToTalkButtonContainer>\r\n            {/* </Grid>\r\n            <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh', marginTop: '-185px' }}> */}\r\n                {/* <Grid item xs={12} sm={3} className={classes.mobile} style={{ marginTop: '20px' }} >\r\n                     <EDetails title=\"overdue\" /> \r\n                </Grid> */}\r\n                \r\n                {/* <Grid item xs={12} sm={3} className={classes.last} style={{marginTop: '20px' }}>\r\n                     <EClist />\r\n                </Grid> */}\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Events\r\n\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import { Grid } from '@material-ui/core';\r\n// import EDetails from './events/EComponents/EDetails/EDetails';\r\n// import EMain from './events/EComponents/EMain/EMain';\r\n// import './index.css';\r\n// import { SpeechState, useSpeechContext } from \"@speechly/react-client\";\r\n// import { ErrorPanel, PushToTalkButton, PushToTalkButtonContainer } from '@speechly/react-ui';\r\n\r\n// const Events = () => {\r\n\r\n//   const { speechState } = useSpeechContext();\r\n//   const main = useRef(null)\r\n\r\n//   // const executeScroll = () => main.current.scrollIntoView()    \r\n\r\n//   // useEffect(() => {\r\n//   //   if (speechState === SpeechState.Recording) {\r\n//   //     executeScroll();\r\n//   //   }\r\n//   // }, [speechState]);\r\n\r\n//     return (\r\n//         <div class=\"events-back\">\r\n//            <Grid container spacing={0} alignItems=\"center\" justify=\"center\" style={{ height: '100vh'}}>\r\n//         <Grid item xs={12} sm={3}>\r\n//           <EDetails title=\"overdue\" />\r\n//         </Grid>\r\n//         <Grid item xs={12} sm={5}>\r\n//           <EMain /> \r\n//         </Grid>\r\n//         {/* <Grid item xs={12} sm={4}>\r\n//           <EDetails title=\"overdue\" />\r\n//         </Grid> */}\r\n//         <Grid item xs={12} sm={3} >\r\n//           <EDetails title=\"completed\" />\r\n//         </Grid>\r\n//         <PushToTalkButtonContainer>\r\n//           <PushToTalkButton />\r\n//           <ErrorPanel />\r\n//         </PushToTalkButtonContainer>\r\n//       </Grid>\r\n          \r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Events\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EClist\\EClist.jsx",["207","208","209"],"import React, { useContext } from 'react';\r\nimport { List as MUIList , ListItem , ListItemAvatar , ListItemText , Avatar,  ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport useStyles from './style';\r\n// import { isClassExpression } from 'typescript';\r\n\r\nimport { ExpenseTrackerContext } from '../../../EContext/context';\r\n\r\nconst EClist = () => {\r\n    const classes = useStyles();\r\n    const { transactions1} = useContext(ExpenseTrackerContext); \r\n       return (\r\n        <MUIList dense={false} className={classes.list}>\r\n      { transactions1.map((transaction) => (\r\n        <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar className={ classes.assign }>\r\n                <AssignmentIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={transaction.category} secondary={`${transaction.subject} - ${transaction.date}`} />\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n    );\r\n};\r\n\r\nexport default EClist;\r\n","C:\\Users\\barha\\OneDrive\\Desktop\\task-manager\\src\\events\\EComponents\\EMain\\EClist\\style.js",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":40,"nodeType":"216","messageId":"217","endLine":2,"endColumn":44},{"ruleId":"214","severity":1,"message":"218","line":9,"column":27,"nodeType":"216","messageId":"217","endLine":9,"endColumn":33},{"ruleId":"214","severity":1,"message":"219","line":9,"column":35,"nodeType":"216","messageId":"217","endLine":9,"endColumn":40},{"ruleId":"214","severity":1,"message":"215","line":9,"column":42,"nodeType":"216","messageId":"217","endLine":9,"endColumn":46},{"ruleId":"214","severity":1,"message":"220","line":9,"column":48,"nodeType":"216","messageId":"217","endLine":9,"endColumn":54},{"ruleId":"214","severity":1,"message":"221","line":29,"column":7,"nodeType":"216","messageId":"217","endLine":29,"endColumn":11},{"ruleId":"214","severity":1,"message":"222","line":31,"column":12,"nodeType":"216","messageId":"217","endLine":31,"endColumn":19},{"ruleId":"214","severity":1,"message":"223","line":34,"column":11,"nodeType":"216","messageId":"217","endLine":34,"endColumn":23},{"ruleId":"224","severity":2,"message":"225","line":68,"column":16,"nodeType":"216","messageId":"226","endLine":68,"endColumn":20},{"ruleId":"214","severity":1,"message":"222","line":42,"column":12,"nodeType":"216","messageId":"217","endLine":42,"endColumn":19},{"ruleId":"214","severity":1,"message":"223","line":45,"column":11,"nodeType":"216","messageId":"217","endLine":45,"endColumn":23},{"ruleId":"227","severity":1,"message":"228","line":69,"column":69,"nodeType":"229","endLine":69,"endColumn":116},{"ruleId":"227","severity":1,"message":"228","line":33,"column":11,"nodeType":"229","endLine":33,"endColumn":118},{"ruleId":"214","severity":1,"message":"230","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":25},{"ruleId":"214","severity":1,"message":"231","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"232","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":26},{"ruleId":"214","severity":1,"message":"233","line":7,"column":8,"nodeType":"216","messageId":"217","endLine":7,"endColumn":12},{"ruleId":"234","severity":1,"message":"235","line":78,"column":6,"nodeType":"236","endLine":78,"endColumn":15,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":1,"nodeType":"240","endLine":11,"endColumn":3},{"ruleId":"214","severity":1,"message":"241","line":2,"column":52,"nodeType":"216","messageId":"217","endLine":2,"endColumn":56},{"ruleId":"214","severity":1,"message":"242","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":13},{"ruleId":"214","severity":1,"message":"243","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":19},{"ruleId":"234","severity":1,"message":"244","line":79,"column":10,"nodeType":"236","endLine":79,"endColumn":19,"suggestions":"245"},{"ruleId":"214","severity":1,"message":"231","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"246","line":2,"column":47,"nodeType":"216","messageId":"217","endLine":2,"endColumn":57},{"ruleId":"214","severity":1,"message":"247","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":16},{"ruleId":"214","severity":1,"message":"248","line":8,"column":10,"nodeType":"216","messageId":"217","endLine":8,"endColumn":21},{"ruleId":"214","severity":1,"message":"249","line":10,"column":8,"nodeType":"216","messageId":"217","endLine":10,"endColumn":14},{"ruleId":"214","severity":1,"message":"250","line":16,"column":13,"nodeType":"216","messageId":"217","endLine":16,"endColumn":24},{"ruleId":"214","severity":1,"message":"251","line":17,"column":11,"nodeType":"216","messageId":"217","endLine":17,"endColumn":15},{"ruleId":"252","severity":1,"message":"253","line":29,"column":66,"nodeType":"254","messageId":"255","endLine":29,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":29,"column":76,"nodeType":"254","messageId":"255","endLine":29,"endColumn":87},{"ruleId":"214","severity":1,"message":"256","line":2,"column":80,"nodeType":"216","messageId":"217","endLine":2,"endColumn":103},{"ruleId":"214","severity":1,"message":"257","line":2,"column":105,"nodeType":"216","messageId":"217","endLine":2,"endColumn":115},{"ruleId":"214","severity":1,"message":"258","line":3,"column":8,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Home' is assigned a value but never used.","'spacing' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-undef","'home' is not defined.","undef","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'useSpeechContext' is defined but never used.","'List' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["261"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Grid' is defined but never used.","'EList' is defined but never used.","'Subtitles' is defined but never used.","React Hook useEffect has missing dependencies: 'createEvent' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["262"],"'Typography' is defined but never used.","'EDetails' is defined but never used.","'SpeechState' is defined but never used.","'EClist' is defined but never used.","'speechState' is assigned a value but never used.","'main' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'ListItemSecondaryAction' is defined but never used.","'IconButton' is defined but never used.","'DoneAllIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"267","text":"268"},"Update the dependencies array to be: [createEvent, formData, segment]",{"range":"269","text":"270"},[3050,3059],"[createTransaction, formData, segment]",[2946,2955],"[createEvent, formData, segment]"]